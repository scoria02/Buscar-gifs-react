{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helper/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","imgg","id","images","original","GifGrid","loading","state","setstate","useEffect","then","img","useFetchGifs","imagenes","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,qBAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAe,MAKnB,SACI,uBAAOO,KAAO,OACdC,MAAST,EACTU,SAlBkB,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,aAsBhCZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,Y,YC9BrBC,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAIhC,OACI,sBAAKC,UAAY,6CAAjB,UACI,qBAAKC,IAAOF,EAAKG,IAAOJ,IACxB,kCAAMA,EAAN,W,uBCTCK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEkCO,UAAUF,GAF5C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAEnB,MAAO,CACHC,GAAID,EAAKC,GACThB,MAAOe,EAAKf,MACZC,IAAKc,EAAKE,OAAOC,SAASjB,QAXf,kBAiBZY,GAjBY,4CAAH,sDCKPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEZxB,mBAAS,CAC/B8B,KAAM,GACNQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAfAC,qBAAU,WAENlB,EAAQC,GACPkB,MAAK,SAAAC,GAEFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAIlB,CAACd,IAIGe,EDnB0BK,CAAcpB,GAAnCqB,EAFyB,EAE9Bf,KAAeQ,EAFe,EAEfA,QActB,OACI,qCACE,mCAAMd,EAAN,OACF,sBAAKJ,UAAY,YAAjB,UACKkB,GAAW,2CAGJO,EAASb,KAAK,SAAAW,GAAG,OACb,cAAC,EAAD,eAEKA,GADEA,EAAIT,cE1BtBY,EAAe,WAAO,IAAD,EAEM9C,mBAAS,CAAC,kBAFhB,mBAEvB+C,EAFuB,KAEXhD,EAFW,KAK9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEQgD,EAAWf,KAAK,SAACR,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAaA,GADNA,QAKnB,2B,MClBZwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d09b2ff3.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Agrega Categorias');\r\n\r\n    const handleInputCharge = (e) => {\r\n\r\n        setInputValue (e.target.value);\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2 ) {\r\n            \r\n            setcategories (cats => [ inputValue,...cats]);\r\n            setInputValue ('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input type = \"text\" \r\n            value = {inputValue} \r\n            onChange = {handleInputCharge}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setcategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n    \r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__backInLeft\">\r\n            <img src = {url} alt = {title} />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=2GOi474veT4G4dxUr1ux5WaV7xzwrqLA`;\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( imgg => {\r\n\r\n        return {\r\n            id: imgg.id,\r\n            title: imgg.title,\r\n            url: imgg.images.original.url\r\n        }\r\n\r\n    })\r\n\r\n    // console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import {getGifs} from '../helper/getGifs';\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:imagenes, loading} = useFetchGifs( category);\r\n    // const [images, setImg] = useState([]);\r\n\r\n    // useEffect (() => {\r\n    //     getGifs(category)\r\n    //     .then(setImg);\r\n        \r\n    // },[category])\r\n\r\n    \r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n          <h3> {category} </h3>\r\n        <div className = \"card-grid\">\r\n            {loading && <p>Loading...</p>}\r\n                 \r\n                {\r\n                    imagenes.map( img => (\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        { ...img}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {getGifs} from '../helper/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n        .then(img => {\r\n\r\n            setstate({\r\n                data: img,\r\n                loading: false\r\n            });\r\n        })\r\n        \r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n    const [categories, setcategories] = useState(['Dragon Ball Z']);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories = { setcategories } />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n                        <GifGrid\r\n                        key = {category}\r\n                        category = { category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n            <hr />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}